###########################################################################                                                               
#                                                              ▒██ 
#      █                                                       █░  
#      █                                                       █   
#    █████  ██▓█▓  █   █  █▒ ▒█          ▓██▒   ███   █▒██▒  █████ 
#      █    █▒█▒█  █   █  ░█ █░         ▓█  ▓  █▓ ▓█  █▓ ▒█    █   
#      █    █ █ █  █   █   ▓█▓          █░     █   █  █   █    █   
#      █    █ █ █  █   █   ░█░          █      █   █  █   █    █   
#      █    █ █ █  █   █   ███          █░     █   █  █   █    █   
#      █░   █ █ █  █▒ ▓█  ░█ █░    █    ▓█  ▓  █▓ ▓█  █   █    █   
#      ▒██  █ █ █  ▒██▒█  █▒ ▒█    █     ▓██▒   ███   █   █    █   
#                                                               
##########################################################################                                                               


#*********************************************************
#                   Tmux bindings
#*********************************************************
set-window-option -g mode-keys vi
# Prefix is Ctrl-a
set -g prefix C-a
bind C-a send-prefix
unbind C-b
set -g detach-on-destroy off
# lower escape time
set-option -sg escape-time 10
# for proper colors
set -g default-terminal "tmux-256color"
set -sa terminal-overrides ",xterm-256color:RGB"

# disable renaming
set-option -g allow-rename off
set-option -g renumber-windows on

# Easy-to-remember split pane commands
bind | split-window -h
bind - split-window -v
bind b switch-client -l
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R
bind Left swap-window -t -1\; select-window -t -1
bind Right swap-window -t +1\; select-window -t +1
bind -n M-h previous-window
bind -n M-l next-window
bind -n M-0 select-window -t 10
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind S set-window-option synchronize-panes
unbind '"'
unbind %
unbind space
unbind m
bind C command-prompt -p "New Session:" "new-session -A -s '%%'"
bind C-x confirm kill-session
bind s choose-tree -sZ -O name
bind C-s choose-tree -sZ -O name

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n 'C-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind -T copy-mode-vi 'C-\' select-pane -l
# Fuzzy session finder
bind-key f display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
bind-key v display-popup -E "tmuxinator-fzf-start.sh"
bind-key m run-shell "create-or-attach-mem-session.sh"

# Moving between windows with vim movement keys
bind C-n select-window -t :+
bind C-p select-window -t :-
bind C-a last-window

# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# easy reload the tmux config file
bind r source-file ~/.tmux.conf

# Capture all history to tmux.history file
bind-key P command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -JS -32768 ; save-buffer %1 ; delete-buffer; display-popup -h 75% -w 75% -E $EDITOR %1 '
# Capture current visible history
bind-key e 'capture-pane -J ; save-buffer ~/tmux.history ; delete-buffer; display-popup -h 75% -w 75% -E $EDITOR ~/tmux.history '
set -g set-clipboard off
# vi mode copying
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe 'win32yank.exe -i'
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'win32yank.exe -i'
unbind-key -T root MouseDragEnd1Pane
unbind-key -T root MouseDrag1Pane

unbind-key -T root MouseDragEnd1Pane
unbind-key -T root MouseDrag1Pane 
bind-key    -T root         DoubleClick1Pane     select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "copy-mode -H ; send -X select-word ; run -d0.3 ; send-keys -X copy-pipe-and-cancel 'win32yank.exe -i'"
bind-key    -T root         TripleClick1Pane     select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "copy-mode -H ; send -X select-line ; run -d0.3 ; send-keys -X copy-pipe-and-cancel 'win32yank.exe -i'"

#********************************************************
#               General settings
#********************************************************
# Enable mouse control
set -g mouse on
set -ga terminal-overrides ',*256color*:smcup@:rmcup@'
set -g base-index 1
setw -g pane-base-index 1
set-option -g focus-events on

#*********************************************************
#               Tmux look & style
#*********************************************************
# Status bar
set -g status-justify left
set -g status-interval 2
set -g status-right-length 100

# Do not use capital letters, for example #F is a keyword and will mess with colors
fg="#cbccc6"
bg="#1f2430"
inactive_bg="#323a4c"
status_bg="#34455a"
border_fg="#70748c"
border_active_fg="#fecb6e"
status_left_bg="#5ccfe6"
status_left_fg="#101521"
status_right_bg="#95e6cb"
status_right_fg="#101521"
clock_right_bg="#d4bfff"
clock_right_fg="#101521"
window_status_current_bg="#ffa759"
window_status_current_fg="#101521"

set -g status-style "bg=$status_bg,fg=$fg"
set -g status-left-style "bg=$status_left_bg,fg=$status_left_fg"

set -g status-left ' #S '
set -g status-right "#(exec tmux list-sessions | awk  '{ OFS = \":\"} {print NR-1,substr($1, 1, length($1)-1)}' | sed -z 's/\\n/ | /g') #[bg=$status_right_bg,fg=$status_right_fg] %b %d %Y #[bg=$clock_right_bg,fg=$clock_right_fg] %R "
# set -g status-right-style "bg=$status_right_bg,fg=$status_right_fg"

# Border
set -g pane-border-style "bg=$bg,fg=$border_fg"
set -g pane-active-border-style "bg=$bg,fg=$border_active_fg"

# Window
set -g window-status-current-format ' #I:#W '
set -g window-status-current-style "fg=$window_status_current_fg,bg=$window_status_current_bg,bold"
set -g window-status-style "fg=$fg"
set -g window-style "bg=$bg"
