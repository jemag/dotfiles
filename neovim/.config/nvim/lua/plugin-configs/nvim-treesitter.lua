local ensure_installed = {
  "bash",
  "bibtex",
  "bicep",
  "c",
  "c_sharp",
  "clojure",
  "cmake",
  -- May have slow performance in large files
  -- "comment",
  "commonlisp",
  "cpp",
  "css",
  "cuda",
  "d",
  "dart",
  "diff",
  "devicetree",
  "dockerfile",
  "elixir",
  "elm",
  "erlang",
  "fennel",
  "fish",
  "foam",
  "fortran",
  "gitcommit",
  "gitignore",
  "git_rebase",
  "gdscript",
  "go",
  "gosum",
  "gotmpl",
  "gomod",
  "gowork",
  "graphql",
  "haskell",
  "hcl",
  "heex",
  "hjson",
  "html",
  "http",
  "ini",
  "java",
  "javascript",
  "jsdoc",
  "json",
  "jsonnet",
  "json5",
  "jsonc",
  "julia",
  "kotlin",
  "latex",
  "llvm",
  "lua",
  "luap",
  "luadoc",
  "make",
  "markdown",
  "markdown_inline",
  "ninja",
  "nix",
  "norg",
  "nu",
  "ocaml",
  "ocaml_interface",
  "ocamllex",
  "pascal",
  "perl",
  "python",
  "ql",
  "query",
  "r",
  "rasi",
  "regex",
  "rego",
  "rst",
  "ruby",
  "rust",
  "scala",
  "scheme",
  "scss",
  "solidity",
  "svelte",
  "swift",
  "teal",
  "todotxt",
  "toml",
  "tmux",
  "tsx",
  "typescript",
  "typst",
  "vala",
  "vim",
  "vimdoc",
  "vue",
  "yaml",
} -- one of "all", "language", or a list of languages

local already_installed = require("nvim-treesitter").get_installed()
local parsers_to_install = vim
  .iter(ensure_installed)
  :filter(function(parser)
    return not vim.tbl_contains(already_installed, parser)
  end)
  :totable()

require("nvim-treesitter").install(parsers_to_install)

vim.api.nvim_create_autocmd("FileType", {
  callback = function()
    pcall(vim.treesitter.start) -- errors for filetypes with no parser
  end,
  desc = "Enable treesitter highlighting",
})
