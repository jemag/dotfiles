require("nvim-treesitter-textobjects").setup({
  textobjects = {
    select = {
      lookahead = true,
    },
    move = {
      set_jumps = true, -- whether to set jumps in the jumplist
    },
  },
})
-- NOTE: SELECT keybinds
vim.keymap.set({ "n", "x", "o" }, "af", function()
  require("nvim-treesitter-textobjects.select").select_textobject("@function.outer", "textobjects")
end, { desc = "Select around function" })
vim.keymap.set({ "n", "x", "o" }, "if", function()
  require("nvim-treesitter-textobjects.select").select_textobject("@function.inner", "textobjects")
end, { desc = "Select inner function" })
-- o for object
vim.keymap.set({ "n", "x", "o" }, "ao", function()
  require("nvim-treesitter-textobjects.select").select_textobject("@class.outer", "textobjects")
end, { desc = "Select around class" })
vim.keymap.set({ "n", "x", "o" }, "io", function()
  require("nvim-treesitter-textobjects.select").select_textobject("@class.inner", "textobjects")
end, { desc = "Select inner class" })
vim.keymap.set({ "n", "x", "o" }, "ac", function()
  require("nvim-treesitter-textobjects.select").select_textobject("@conditional.outer", "textobjects")
end, { desc = "Select around conditional" })
vim.keymap.set({ "n", "x", "o" }, "ic", function()
  require("nvim-treesitter-textobjects.select").select_textobject("@conditional.inner", "textobjects")
end, { desc = "Select inner conditional" })
vim.keymap.set({ "n", "x", "o" }, "ae", function()
  require("nvim-treesitter-textobjects.select").select_textobject("@block.outer", "textobjects")
end, { desc = "Select around block" })
vim.keymap.set({ "n", "x", "o" }, "ie", function()
  require("nvim-treesitter-textobjects.select").select_textobject("@block.inner", "textobjects")
end, { desc = "Select inner block" })
vim.keymap.set({ "n", "x", "o" }, "al", function()
  require("nvim-treesitter-textobjects.select").select_textobject("@loop.outer", "textobjects")
end, { desc = "Select around loop" })
vim.keymap.set({ "n", "x", "o" }, "il", function()
  require("nvim-treesitter-textobjects.select").select_textobject("@loop.inner", "textobjects")
end, { desc = "Select inner loop" })
vim.keymap.set({ "n", "x", "o" }, "aa", function()
  require("nvim-treesitter-textobjects.select").select_textobject("@parameter.outer", "textobjects")
end, { desc = "Select around parameter" })
vim.keymap.set({ "n", "x", "o" }, "ia", function()
  require("nvim-treesitter-textobjects.select").select_textobject("@parameter.inner", "textobjects")
end, { desc = "Select inner parameter" })
vim.keymap.set({ "n", "x", "o" }, "as", function()
  require("nvim-treesitter-textobjects.select").select_textobject("@statement.outer", "textobjects")
end, { desc = "Select around statement" })
vim.keymap.set({ "n", "x", "o" }, "ak", function()
  require("nvim-treesitter-textobjects.select").select_textobject("@comment.outer", "textobjects")
end, { desc = "Select around comment" })
vim.keymap.set({ "n", "x", "o" }, "am", function()
  require("nvim-treesitter-textobjects.select").select_textobject("@call.outer", "textobjects")
end, { desc = "Select around call" })
vim.keymap.set({ "n", "x", "o" }, "im", function()
  require("nvim-treesitter-textobjects.select").select_textobject("@call.inner", "textobjects")
end, { desc = "Select inner call" })
-- NOTE move keybinds
vim.keymap.set({ "n", "x", "o" }, "]f", function()
  require("nvim-treesitter-textobjects.move").goto_next_start("@function.outer")
end, { desc = "Next function start" })
vim.keymap.set({ "n", "x", "o" }, "]o", function()
  require("nvim-treesitter-textobjects.move").goto_next_start("@class.outer")
end, { desc = "Next class start" })
vim.keymap.set({ "n", "x", "o" }, "]a", function()
  require("nvim-treesitter-textobjects.move").goto_next_start("@parameter.inner")
end, { desc = "Next parameter start" })
vim.keymap.set({ "n", "x", "o" }, "[f", function()
  require("nvim-treesitter-textobjects.move").goto_previous_start("@function.outer")
end, { desc = "Previous function start" })
vim.keymap.set({ "n", "x", "o" }, "[o", function()
  require("nvim-treesitter-textobjects.move").goto_previous_start("@class.outer")
end, { desc = "Previous class start" })
vim.keymap.set({ "n", "x", "o" }, "[a", function()
  require("nvim-treesitter-textobjects.move").goto_previous_start("@parameter.inner")
end, { desc = "Previous parameter start" })
vim.keymap.set({ "n", "x", "o" }, "]F", function()
  require("nvim-treesitter-textobjects.move").goto_next_end("@function.outer")
end, { desc = "Next function end" })
vim.keymap.set({ "n", "x", "o" }, "]O", function()
  require("nvim-treesitter-textobjects.move").goto_next_end("@class.outer")
end, { desc = "Next class end" })
vim.keymap.set({ "n", "x", "o" }, "]A", function()
  require("nvim-treesitter-textobjects.move").goto_next_end("@parameter.inner")
end, { desc = "Next parameter end" })
vim.keymap.set({ "n", "x", "o" }, "[F", function()
  require("nvim-treesitter-textobjects.move").goto_previous_end("@function.outer")
end, { desc = "Previous function end" })
vim.keymap.set({ "n", "x", "o" }, "[O", function()
  require("nvim-treesitter-textobjects.move").goto_previous_end("@class.outer")
end, { desc = "Previous class end" })
vim.keymap.set({ "n", "x", "o" }, "[A", function()
  require("nvim-treesitter-textobjects.move").goto_previous_end("@parameter.inner")
end, { desc = "Previous parameter end" })
