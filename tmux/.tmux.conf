###########################################################################                                                               
#                                                              ▒██ 
#      █                                                       █░  
#      █                                                       █   
#    █████  ██▓█▓  █   █  █▒ ▒█          ▓██▒   ███   █▒██▒  █████ 
#      █    █▒█▒█  █   █  ░█ █░         ▓█  ▓  █▓ ▓█  █▓ ▒█    █   
#      █    █ █ █  █   █   ▓█▓          █░     █   █  █   █    █   
#      █    █ █ █  █   █   ░█░          █      █   █  █   █    █   
#      █    █ █ █  █   █   ███          █░     █   █  █   █    █   
#      █░   █ █ █  █▒ ▓█  ░█ █░    █    ▓█  ▓  █▓ ▓█  █   █    █   
#      ▒██  █ █ █  ▒██▒█  █▒ ▒█    █     ▓██▒   ███   █   █    █   
#                                                               
##########################################################################                                                               


#*********************************************************
#                   Tmux bindings
#*********************************************************
set-window-option -g mode-keys vi
# Prefix is Ctrl-a
set -g prefix C-a
bind C-a send-prefix
unbind C-b
# lower escape time
set-option -sg escape-time 10
# for proper colors
set-option -g default-terminal "screen-256color"

# disable renaming
set-option -g allow-rename off

# Easy-to-remember split pane commands
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Moving between windows with vim movement keys
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
bind-key C-a last-window

# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# easy reload the tmux config file
bind r source-file ~/.tmux.conf

# vi mode copying
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -selection c"
# bind-key -T copy-mode-vi y send-keys -X copy-selection
# bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

#********************************************************
#               General settings
#********************************************************
# Enable mouse control
set -g mouse on
set -g base-index 1
setw -g pane-base-index 1

#*********************************************************
#               Tmux look & style
#*********************************************************
# Messaging
set -g message-style fg=colour14,bg=black
set -g message-command-style fg=white,bg=black

# Pane
set -g pane-active-border-style fg=colour7
set -g pane-border-style fg=colour7

# Status bar
set -g status-justify left
set -g status-interval 2
set -g status-bg default
set -g status-fg colour7
set -g status-left ''
set -g status-right '#[fg=colour7,bg=red] %b %d %Y #[fg=black,bg=colour7] %R '
set -g status-right-length 100

# Window
set -g window-status-format '#[fg=colour7,bg=colour8] #I #[fg=colour7,bg=colour10] #W '
set -g window-status-current-format '#[fg=black,bg=white] #I #[fg=colour15,bg=magenta] #W '
